{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator \"thunk\".\n*\n* @param {Function} iterFcn - iterator function\n* @param {...*} [args] - function arguments\n* @throws {TypeError} first argument must be a function\n* @returns {Function} iterator \"thunk\"\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n* import iterSome from '@stdlib/iter-some';\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var thunk = iterThunk( iterSome, 3 );\n*\n* var bool = thunk( it );\n* // returns true\n*/\nfunction iterThunk( iterFcn ) {\n\tvar pargs;\n\tvar nargs;\n\tvar i;\n\tif ( !isFunction( iterFcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', iterFcn ) );\n\t}\n\tnargs = arguments.length;\n\tpargs = [];\n\tfor ( i = 1; i < nargs; i++ ) {\n\t\tpargs.push( arguments[ i ] );\n\t}\n\treturn thunk;\n\n\t/**\n\t* Invokes an iterator function with a provided iterator and previously provided iterator function arguments.\n\t*\n\t* @private\n\t* @param {Iterator} iter - input iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @returns {*} iterator function result\n\t*/\n\tfunction thunk( iter ) {\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an iterator. Value: `%s`.', iter ) );\n\t\t}\n\t\targs = [ iter ];\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targs.push( pargs[ i ] );\n\t\t}\n\t\treturn iterFcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterThunk;\n"],"names":["iterThunk","iterFcn","pargs","nargs","i","isFunction","TypeError","format","arguments","length","push","thunk","iter","args","isIteratorLike","apply"],"mappings":";;uRAgDA,SAASA,EAAWC,GACnB,IAAIC,EACAC,EACAC,EACJ,IAAMC,EAAYJ,GACjB,MAAM,IAAIK,UAAWC,EAAQ,oEAAqEN,IAInG,IAFAE,EAAQK,UAAUC,OAClBP,EAAQ,GACFE,EAAI,EAAGA,EAAID,EAAOC,IACvBF,EAAMQ,KAAMF,UAAWJ,IAExB,OAAOO,EAUP,SAASA,EAAOC,GACf,IAAIC,EACAT,EACJ,IAAMU,EAAgBF,GACrB,MAAM,IAAIN,UAAWC,EAAQ,2DAA4DK,IAG1F,IADAC,EAAO,CAAED,GACHR,EAAI,EAAGA,EAAID,EAAOC,IACvBS,EAAKH,KAAMR,EAAOE,IAEnB,OAAOH,EAAQc,MAAO,KAAMF,EAC5B,CACF"}